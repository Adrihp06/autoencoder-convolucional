{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNsK/CKM5sk+1xOOIE1SrN6"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"yZsiVUVkILYK"},"outputs":[],"source":["#Imports\n","import tensorflow as tf \n","import numpy as np\n","import os\n","import tensorflow.keras.preprocessing.image import img_to_array\n","from PIL import Image\n","from skimage.transform import resize "]},{"cell_type":"code","source":["class DataGenerator(tf.keras.util.Sequence):\n","\n","  def __init__(self, data_frame, width, height, channels, batch_size, path_to_img, shuffle=True):\n","    self.df = data_frame\n","    self.width = width\n","    self.height = height\n","    self.channels = channels\n","    self.batch_size = batch_size\n","    self.path_to_img = path_to_img\n","    self.shuffle = shuffle\n","    self.indexes = np.arange(len(data_frame.index))\n","\n","  def __len__(self):\n","    return int(np.ceil(len(self.indexes/batch_size)))\n","\n","  def on_epoch_end(self):\n","    if self.shuffle = True:\n","      np.random.shuffle(self.indexes)\n","\n","  def __getitem__(self, index):\n","    indexes = self.indexes[index * self.batch_size:(index+1) * batch_size]\n","\n","    #Inicializamos listas de datos\n","    X, Y =[],[]\n","\n","    for idx in indexes: \n","      x, y = slef.get_sample(idx)\n","      X.append(x)\n","      Y.append(y)\n","      return np.array(X), np.array(Y)\n","\n","  def get_sample(self, idx):\n","    df_row = self.df.iloc[idx]\n","    image = Image.open(os.path.join(self.path_to_img, df_row[\"ImageID\"])\n","    image = image.resize((self.height, self.width))\n","    image = np.array(image)\n","    image2 = np.reshape(image, image.shape + (self.channels,))\n","    image2.setflags(write = 1)\n","    image2 = self.norm(image2)\n","    label = image2\n","    return image2, label #(X, Y)\n","  \n","  def norm(self,image):\n","    image = image/255.0\n","    return image.astype(np.float32)\n","    "],"metadata":{"id":"_SSSte9AI47h"},"execution_count":null,"outputs":[]}]}